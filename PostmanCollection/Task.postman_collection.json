{
	"info": {
		"_postman_id": "9a8c7fe8-c949-492b-8b98-32baf728babc",
		"name": "Task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40894521",
		"_collection_link": "https://authentication-4046.postman.co/workspace/8c8cb453-f467-4bdb-aa1e-195f127346f2/collection/40894521-9a8c7fe8-c949-492b-8b98-32baf728babc?action=share&source=collection_link&creator=40894521"
	},
	"item": [
		{
			"name": "Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2F1dGgvbG9naW4iLCJpYXQiOjE3NTY1ODI4NzAsImV4cCI6MTc1NjU4NjQ3MCwibmJmIjoxNzU2NTgyODcwLCJqdGkiOiJsTDJURmFFQjFvdVNqWm1YIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.YV4s82HvcXNsaNhe0Rf9oS_eqK3miX_14ZXmGXUE1M4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "title",
							"value": "kkfk",
							"type": "text"
						},
						{
							"key": "description",
							"value": "   gjj",
							"type": "text"
						},
						{
							"key": "status",
							"value": "pending",
							"type": "text"
						},
						{
							"key": "assigned_to",
							"value": "3",
							"type": "text"
						},
						{
							"key": "created_by",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}/api/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tasks"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Get Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/tasks",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tasks"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "update Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2F1dGgvbG9naW4iLCJpYXQiOjE3NTY1ODI4NzAsImV4cCI6MTc1NjU4NjQ3MCwibmJmIjoxNzU2NTgyODcwLCJqdGkiOiJsTDJURmFFQjFvdVNqWm1YIiwic3ViIjoiMSIsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.YV4s82HvcXNsaNhe0Rf9oS_eqK3miX_14ZXmGXUE1M4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "multipart/form-data",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"f\",\r\n    \"description\":\"rr\",\r\n    \"status\":\"canceled\",\r\n    \"assigned_to\":2,\r\n    \"created_by\":1\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/tasks/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"tasks",
						"1"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "asign-task/{task_id}/to/{user_id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/asign-task/1/to/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"asign-task",
						"1",
						"to",
						"1"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "tasks/{task_id}/dependencies",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks/{task_id}/dependencies",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks",
						"{task_id}",
						"dependencies"
					]
				}
			},
			"response": []
		},
		{
			"name": "tasks/{id}/details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/tasks/{id}/details",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"tasks",
						"{id}",
						"details"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}